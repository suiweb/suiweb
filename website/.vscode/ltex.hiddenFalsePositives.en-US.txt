{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qindex.js\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QIn this function we assign the parameters \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the variables \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which are defined globally on the hooks module.\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QIn this function we assign the parameters \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to the variables \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which are defined globally in the hooks module, together with \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, which we set to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"POSSESSIVE_APOSTROPHE","sentence":"^\\QIt might actually seem quite strange that we set those values globally on the hooks module, as we have nothing like an instance of this module.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QSimilar to attributes which you might know from HTML (such as the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q attribute on an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q)\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QWe use the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q function, which is another type-checker function, to check whether a child is an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QThe downside is, that it's not possible to include a module in a document loaded via the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q scheme (this what happens when you open an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q-File directly with your web browser).\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QNext, a new DOM node is created, which is either an \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q or a \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q element.\\E$"}
